[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "postgres-mcp"
dynamic = ["version"]
description = "PostgreSQL MCP Server"
readme = "README.md"
requires-python = ">=3.10"
license = "MIT"
keywords = []
authors = [
  {name = "CrystalDBA", email = "info@crystaldba.ai"},
]
classifiers = [
  "Development Status :: 4 - Beta",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: Implementation :: CPython",
  "Programming Language :: Python :: Implementation :: PyPy",
]
dependencies = [
  "mcp",
  "psycopg[binary]",
  "psycopg-pool",
  "pydantic",
  "sqlparse",
  "matplotlib",
  "numpy",
  "pandas",
  "networkx",
  "pillow",
  "openai",
  "tiktoken",
  "starlette",
]

[project.scripts]
postgres-mcp = "postgres_mcp:main"

# [tool.pyright]
# venvPath = "."
# venv = ".venv"

[tool.hatch.version]
path = "src/postgres_mcp/__about__.py"

[tool.pytest.ini_options]
pythonpath = ["./src"]
asyncio_default_fixture_loop_scope = "function"

[dependency-groups]
dev = [
    "docker>=7.1.0",
    "pyright==1.1.398",
    "pytest-asyncio>=0.26.0",
    "pytest>=8.3.5",
    "ruff==0.11.2",
]

[tool.black]
line-length = 150

[tool.ruff]
line-length = 150
target-version = "py38"
exclude = [".venv*"]

lint.select = [
    "E",   # pycodestyle errors
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "W",   # pycodestyle warnings
    # "C90", # mccabe complexity
    "N",   # pep8-naming
    # "D",   # pydocstyle
    "UP",  # pyupgrade
    "RUF"  # ruff-specific rules
]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
line-ending = "auto"

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.isort]
force-single-line = true
known-first-party = ["postgres-mcp"]

[tool.pyright]
typeCheckingMode = "standard"
pythonVersion = "3.12"
strictParameterNullChecking = true
reportMissingTypeStubs = false
# reportUnknownMemberType = true
# reportUnknownParameterType = true
# reportUnknownVariableType = true
# reportUnknownArgumentType = true
reportPrivateUsage = true
reportUntypedFunctionDecorator = true
reportMissingTypeArgument = true
reportInvalidTypeVarUse = true
reportUnnecessaryCast = true
# reportUnnecessaryComparison = true
